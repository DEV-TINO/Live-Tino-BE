spring.application.name=live-tino

# profile management
spring.profiles.include=secret

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# DB
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://mariadb:3306/livetino
spring.datasource.username=root
spring.datasource.password=1234

# Hibernate Dialect ?? (MariaDB)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# strategy of ddl (create, update, create-drop, validate)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# GAVIA SECRET
gavia.key=${GAVIA_KEY}
gavia.smsId=${GAVIA_SMS_ID}
gavia.callback=${GAVIA_CALL_BACK}

# rabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=test
spring.rabbitmq.password=1234
spring.rabbitmq.virtual-host=/

rabbitmq.queue.name=test.queue
rabbitmq.exchange.name=test.exchange
rabbitmq.routing.key=chat.room.#

spring.rabbitmq.stomp.enabled=true
spring.rabbitmq.stomp.port=61613

spring.rabbitmq.authentication-mechanism=AMQPLAIN


# ?? ??
chat.path=http://live-tino-be-server:8080

#logging.level.root=DEBUG

# because closing STOMP connection
client.heartbeat.outgoing=0;
client.heartbeat.incoming=0;

#logging.level.org.springframework.web.socket=DEBUG
#logging.level.org.springframework.messaging=DEBUG
#logging.level.org.springframework.web.socket.messaging=DEBUG
#logging.level.org.springframework.jdbc.core=DEBUG
#logging.level.org.springframework.web=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.orm.jdbc.bind=TRACE



